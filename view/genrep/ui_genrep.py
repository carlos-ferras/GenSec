# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/home/krl1to5/Work/FULL/Sequence-ToolKit/2016/resources/ui/genrep/genrep.ui'
#
# Created by: PyQt5 UI code generator 5.5.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_main_window(object):
    def setupUi(self, main_window):
        main_window.setObjectName("main_window")
        main_window.resize(1109, 619)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/resources/img/logos/genrep.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        main_window.setWindowIcon(icon)
        self.central_widget = QtWidgets.QWidget(main_window)
        self.central_widget.setObjectName("central_widget")
        self.gridLayout = QtWidgets.QGridLayout(self.central_widget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.tab_widget = QtWidgets.QTabWidget(self.central_widget)
        self.tab_widget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tab_widget.setElideMode(QtCore.Qt.ElideRight)
        self.tab_widget.setDocumentMode(True)
        self.tab_widget.setTabsClosable(True)
        self.tab_widget.setMovable(True)
        self.tab_widget.setTabBarAutoHide(False)
        self.tab_widget.setObjectName("tab_widget")
        self.gridLayout.addWidget(self.tab_widget, 0, 0, 1, 1)
        self.animation_area = QtWidgets.QWidget(self.central_widget)
        self.animation_area.setObjectName("animation_area")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.animation_area)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.animation_handler = QtWidgets.QLabel(self.animation_area)
        self.animation_handler.setMaximumSize(QtCore.QSize(100000, 16))
        self.animation_handler.setCursor(QtGui.QCursor(QtCore.Qt.ClosedHandCursor))
        self.animation_handler.setText("")
        self.animation_handler.setObjectName("animation_handler")
        self.verticalLayout_2.addWidget(self.animation_handler)
        self.conainer = QtWidgets.QWidget(self.animation_area)
        self.conainer.setObjectName("conainer")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.conainer)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setSpacing(0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.left_area = QtWidgets.QWidget(self.conainer)
        self.left_area.setMinimumSize(QtCore.QSize(0, 0))
        self.left_area.setObjectName("left_area")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.left_area)
        self.verticalLayout_10.setContentsMargins(-1, 0, 0, 0)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.plot_and_tool_bar_area = QtWidgets.QWidget(self.left_area)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.plot_and_tool_bar_area.sizePolicy().hasHeightForWidth())
        self.plot_and_tool_bar_area.setSizePolicy(sizePolicy)
        self.plot_and_tool_bar_area.setObjectName("plot_and_tool_bar_area")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.plot_and_tool_bar_area)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.tool_bar_area = QtWidgets.QWidget(self.plot_and_tool_bar_area)
        self.tool_bar_area.setMinimumSize(QtCore.QSize(60, 0))
        self.tool_bar_area.setMaximumSize(QtCore.QSize(60, 16777215))
        self.tool_bar_area.setObjectName("tool_bar_area")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.tool_bar_area)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout.addWidget(self.tool_bar_area)
        self.plot_area = PlotWidget(self.plot_and_tool_bar_area)
        self.plot_area.setMinimumSize(QtCore.QSize(0, 350))
        self.plot_area.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.plot_area.setFrameShadow(QtWidgets.QFrame.Plain)
        self.plot_area.setLineWidth(0)
        self.plot_area.setObjectName("plot_area")
        self.horizontalLayout.addWidget(self.plot_area)
        self.verticalLayout_10.addWidget(self.plot_and_tool_bar_area)
        self.indicators = QtWidgets.QHBoxLayout()
        self.indicators.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.indicators.setSpacing(6)
        self.indicators.setObjectName("indicators")
        self.signal_indicators = QtWidgets.QHBoxLayout()
        self.signal_indicators.setObjectName("signal_indicators")
        self.signal_low_indicator = QtWidgets.QVBoxLayout()
        self.signal_low_indicator.setObjectName("signal_low_indicator")
        self.signal_low_label = QtWidgets.QLabel(self.left_area)
        self.signal_low_label.setMinimumSize(QtCore.QSize(0, 30))
        self.signal_low_label.setMaximumSize(QtCore.QSize(16777215, 30))
        self.signal_low_label.setAlignment(QtCore.Qt.AlignCenter)
        self.signal_low_label.setObjectName("signal_low_label")
        self.signal_low_indicator.addWidget(self.signal_low_label)
        self.signal_low = ValuesSpinBox(self.left_area)
        self.signal_low.setMinimumSize(QtCore.QSize(0, 28))
        self.signal_low.setObjectName("signal_low")
        self.signal_low_indicator.addWidget(self.signal_low)
        self.signal_indicators.addLayout(self.signal_low_indicator)
        self.signal_indicator = QtWidgets.QVBoxLayout()
        self.signal_indicator.setObjectName("signal_indicator")
        self.signal_label = QtWidgets.QLabel(self.left_area)
        self.signal_label.setMinimumSize(QtCore.QSize(0, 30))
        self.signal_label.setMaximumSize(QtCore.QSize(16777215, 30))
        self.signal_label.setAlignment(QtCore.Qt.AlignCenter)
        self.signal_label.setObjectName("signal_label")
        self.signal_indicator.addWidget(self.signal_label)
        self.signal = QtWidgets.QLineEdit(self.left_area)
        self.signal.setMinimumSize(QtCore.QSize(100, 28))
        self.signal.setMaximumSize(QtCore.QSize(100, 16777215))
        self.signal.setReadOnly(True)
        self.signal.setObjectName("signal")
        self.signal_indicator.addWidget(self.signal)
        self.signal_indicators.addLayout(self.signal_indicator)
        self.signal_high_indicator = QtWidgets.QVBoxLayout()
        self.signal_high_indicator.setObjectName("signal_high_indicator")
        self.signal_high_label = QtWidgets.QLabel(self.left_area)
        self.signal_high_label.setMinimumSize(QtCore.QSize(0, 30))
        self.signal_high_label.setMaximumSize(QtCore.QSize(16777215, 30))
        self.signal_high_label.setAlignment(QtCore.Qt.AlignCenter)
        self.signal_high_label.setObjectName("signal_high_label")
        self.signal_high_indicator.addWidget(self.signal_high_label)
        self.signal_high = ValuesSpinBox(self.left_area)
        self.signal_high.setMinimumSize(QtCore.QSize(0, 28))
        self.signal_high.setObjectName("signal_high")
        self.signal_high_indicator.addWidget(self.signal_high)
        self.signal_indicators.addLayout(self.signal_high_indicator)
        self.indicators.addLayout(self.signal_indicators)
        spacerItem = QtWidgets.QSpacerItem(50, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.indicators.addItem(spacerItem)
        self.plot_apply_buttons_area = QtWidgets.QHBoxLayout()
        self.plot_apply_buttons_area.setObjectName("plot_apply_buttons_area")
        self.apply_to = QtWidgets.QPushButton(self.left_area)
        self.apply_to.setMinimumSize(QtCore.QSize(100, 32))
        self.apply_to.setObjectName("apply_to")
        self.plot_apply_buttons_area.addWidget(self.apply_to)
        spacerItem1 = QtWidgets.QSpacerItem(110, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.plot_apply_buttons_area.addItem(spacerItem1)
        self.apply_all = QtWidgets.QPushButton(self.left_area)
        self.apply_all.setMinimumSize(QtCore.QSize(100, 32))
        self.apply_all.setObjectName("apply_all")
        self.plot_apply_buttons_area.addWidget(self.apply_all)
        self.indicators.addLayout(self.plot_apply_buttons_area)
        spacerItem2 = QtWidgets.QSpacerItem(50, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.indicators.addItem(spacerItem2)
        self.background_indicators = QtWidgets.QHBoxLayout()
        self.background_indicators.setObjectName("background_indicators")
        self.background_low_indicator = QtWidgets.QVBoxLayout()
        self.background_low_indicator.setObjectName("background_low_indicator")
        self.background_low_label = QtWidgets.QLabel(self.left_area)
        self.background_low_label.setMinimumSize(QtCore.QSize(0, 30))
        self.background_low_label.setMaximumSize(QtCore.QSize(16777215, 30))
        self.background_low_label.setAlignment(QtCore.Qt.AlignCenter)
        self.background_low_label.setObjectName("background_low_label")
        self.background_low_indicator.addWidget(self.background_low_label)
        self.background_low = ValuesSpinBox(self.left_area)
        self.background_low.setMinimumSize(QtCore.QSize(0, 28))
        self.background_low.setObjectName("background_low")
        self.background_low_indicator.addWidget(self.background_low)
        self.background_indicators.addLayout(self.background_low_indicator)
        self.background_indicator = QtWidgets.QVBoxLayout()
        self.background_indicator.setObjectName("background_indicator")
        self.background_label = QtWidgets.QLabel(self.left_area)
        self.background_label.setMinimumSize(QtCore.QSize(0, 30))
        self.background_label.setMaximumSize(QtCore.QSize(16777215, 30))
        self.background_label.setAlignment(QtCore.Qt.AlignCenter)
        self.background_label.setObjectName("background_label")
        self.background_indicator.addWidget(self.background_label)
        self.background = QtWidgets.QLineEdit(self.left_area)
        self.background.setMinimumSize(QtCore.QSize(100, 28))
        self.background.setMaximumSize(QtCore.QSize(100, 16777215))
        self.background.setReadOnly(True)
        self.background.setObjectName("background")
        self.background_indicator.addWidget(self.background)
        self.background_indicators.addLayout(self.background_indicator)
        self.background_high_indicator = QtWidgets.QVBoxLayout()
        self.background_high_indicator.setObjectName("background_high_indicator")
        self.background_high_label = QtWidgets.QLabel(self.left_area)
        self.background_high_label.setMinimumSize(QtCore.QSize(0, 30))
        self.background_high_label.setMaximumSize(QtCore.QSize(16777215, 30))
        self.background_high_label.setAlignment(QtCore.Qt.AlignCenter)
        self.background_high_label.setObjectName("background_high_label")
        self.background_high_indicator.addWidget(self.background_high_label)
        self.background_high = ValuesSpinBox(self.left_area)
        self.background_high.setMinimumSize(QtCore.QSize(0, 28))
        self.background_high.setObjectName("background_high")
        self.background_high_indicator.addWidget(self.background_high)
        self.background_indicators.addLayout(self.background_high_indicator)
        self.indicators.addLayout(self.background_indicators)
        self.verticalLayout_10.addLayout(self.indicators)
        self.horizontalLayout_2.addWidget(self.left_area)
        self.right_area = QtWidgets.QWidget(self.conainer)
        self.right_area.setMinimumSize(QtCore.QSize(300, 0))
        self.right_area.setMaximumSize(QtCore.QSize(300, 16777215))
        self.right_area.setObjectName("right_area")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.right_area)
        self.verticalLayout_11.setContentsMargins(-1, 10, -1, 0)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.current_row_handlers = QtWidgets.QHBoxLayout()
        self.current_row_handlers.setSpacing(13)
        self.current_row_handlers.setObjectName("current_row_handlers")
        self.tool_button_previous = QtWidgets.QToolButton(self.right_area)
        self.tool_button_previous.setMinimumSize(QtCore.QSize(0, 32))
        self.tool_button_previous.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/resources/img/icons/arrow_left.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tool_button_previous.setIcon(icon1)
        self.tool_button_previous.setIconSize(QtCore.QSize(24, 24))
        self.tool_button_previous.setObjectName("tool_button_previous")
        self.current_row_handlers.addWidget(self.tool_button_previous)
        self.current_row = QtWidgets.QSpinBox(self.right_area)
        self.current_row.setMinimumSize(QtCore.QSize(0, 28))
        self.current_row.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.current_row.setObjectName("current_row")
        self.current_row_handlers.addWidget(self.current_row)
        self.push_button_go = QtWidgets.QPushButton(self.right_area)
        self.push_button_go.setMinimumSize(QtCore.QSize(60, 32))
        self.push_button_go.setMaximumSize(QtCore.QSize(40, 16777215))
        self.push_button_go.setStyleSheet("text-align:center;")
        self.push_button_go.setObjectName("push_button_go")
        self.current_row_handlers.addWidget(self.push_button_go)
        self.tool_button_next = QtWidgets.QToolButton(self.right_area)
        self.tool_button_next.setMinimumSize(QtCore.QSize(0, 32))
        self.tool_button_next.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/resources/img/icons/arrow_right.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tool_button_next.setIcon(icon2)
        self.tool_button_next.setIconSize(QtCore.QSize(24, 24))
        self.tool_button_next.setObjectName("tool_button_next")
        self.current_row_handlers.addWidget(self.tool_button_next)
        self.verticalLayout_11.addLayout(self.current_row_handlers)
        self.columns_list = QtWidgets.QTreeWidget(self.right_area)
        self.columns_list.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.columns_list.setTabKeyNavigation(True)
        self.columns_list.setObjectName("columns_list")
        self.verticalLayout_11.addWidget(self.columns_list)
        self.columns_list.raise_()
        self.horizontalLayout_2.addWidget(self.right_area)
        self.verticalLayout_2.addWidget(self.conainer)
        self.gridLayout.addWidget(self.animation_area, 1, 0, 1, 1)
        main_window.setCentralWidget(self.central_widget)
        self.menubar = QtWidgets.QMenuBar(main_window)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1109, 19))
        self.menubar.setObjectName("menubar")
        self.menu_file = QtWidgets.QMenu(self.menubar)
        self.menu_file.setObjectName("menu_file")
        self.menu_recent_files = QtWidgets.QMenu(self.menu_file)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/resources/img/icons/open_recent.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_recent_files.setIcon(icon3)
        self.menu_recent_files.setObjectName("menu_recent_files")
        self.menu_edit = QtWidgets.QMenu(self.menubar)
        self.menu_edit.setObjectName("menu_edit")
        self.menu_options = QtWidgets.QMenu(self.menubar)
        self.menu_options.setObjectName("menu_options")
        self.menu_help = QtWidgets.QMenu(self.menubar)
        self.menu_help.setObjectName("menu_help")
        main_window.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(main_window)
        self.statusbar.setObjectName("statusbar")
        main_window.setStatusBar(self.statusbar)
        self.standart_toolbar = QtWidgets.QToolBar(main_window)
        self.standart_toolbar.setObjectName("standart_toolbar")
        main_window.addToolBar(QtCore.Qt.TopToolBarArea, self.standart_toolbar)
        self.tools_toolbar = QtWidgets.QToolBar(main_window)
        self.tools_toolbar.setObjectName("tools_toolbar")
        main_window.addToolBar(QtCore.Qt.TopToolBarArea, self.tools_toolbar)
        self.applications_toolbar = QtWidgets.QToolBar(main_window)
        self.applications_toolbar.setObjectName("applications_toolbar")
        main_window.addToolBar(QtCore.Qt.TopToolBarArea, self.applications_toolbar)
        self.action_new = QtWidgets.QAction(main_window)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/resources/img/icons/new.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_new.setIcon(icon4)
        self.action_new.setObjectName("action_new")
        self.action_open = QtWidgets.QAction(main_window)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/resources/img/icons/open.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_open.setIcon(icon5)
        self.action_open.setObjectName("action_open")
        self.action_save = QtWidgets.QAction(main_window)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/resources/img/icons/save.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_save.setIcon(icon6)
        self.action_save.setObjectName("action_save")
        self.action_save_as = QtWidgets.QAction(main_window)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/resources/img/icons/save_as.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_save_as.setIcon(icon7)
        self.action_save_as.setObjectName("action_save_as")
        self.action_save_all = QtWidgets.QAction(main_window)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/resources/img/icons/save_all.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_save_all.setIcon(icon8)
        self.action_save_all.setObjectName("action_save_all")
        self.action_print = QtWidgets.QAction(main_window)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/resources/img/icons/print.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_print.setIcon(icon9)
        self.action_print.setObjectName("action_print")
        self.action_cut = QtWidgets.QAction(main_window)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/resources/img/icons/cut.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_cut.setIcon(icon10)
        self.action_cut.setObjectName("action_cut")
        self.action_copy = QtWidgets.QAction(main_window)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/resources/img/icons/copy.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_copy.setIcon(icon11)
        self.action_copy.setObjectName("action_copy")
        self.action_paste = QtWidgets.QAction(main_window)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/resources/img/icons/paste.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_paste.setIcon(icon12)
        self.action_paste.setObjectName("action_paste")
        self.action_help = QtWidgets.QAction(main_window)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/resources/img/icons/help.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_help.setIcon(icon13)
        self.action_help.setObjectName("action_help")
        self.action_about = QtWidgets.QAction(main_window)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/resources/img/icons/about.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_about.setIcon(icon14)
        self.action_about.setObjectName("action_about")
        self.action_delete = QtWidgets.QAction(main_window)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/resources/img/icons/delete.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_delete.setIcon(icon15)
        self.action_delete.setObjectName("action_delete")
        self.action_quit = QtWidgets.QAction(main_window)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/resources/img/icons/quit.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_quit.setIcon(icon16)
        self.action_quit.setObjectName("action_quit")
        self.action_close = QtWidgets.QAction(main_window)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/resources/img/icons/close.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_close.setIcon(icon17)
        self.action_close.setObjectName("action_close")
        self.action_about_genrep = QtWidgets.QAction(main_window)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/resources/img/icons/about_variant.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_about_genrep.setIcon(icon18)
        self.action_about_genrep.setObjectName("action_about_genrep")
        self.action_setup = QtWidgets.QAction(main_window)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/resources/img/icons/setup.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_setup.setIcon(icon19)
        self.action_setup.setObjectName("action_setup")
        self.action_profile = QtWidgets.QAction(main_window)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/resources/img/icons/profile.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_profile.setIcon(icon20)
        self.action_profile.setShortcut("")
        self.action_profile.setObjectName("action_profile")
        self.action_association_by_criteria = QtWidgets.QAction(main_window)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/resources/img/icons/association_by_criteria.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_association_by_criteria.setIcon(icon21)
        self.action_association_by_criteria.setObjectName("action_association_by_criteria")
        self.action_group = QtWidgets.QAction(main_window)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/resources/img/icons/group.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_group.setIcon(icon22)
        self.action_group.setObjectName("action_group")
        self.action_ungroup = QtWidgets.QAction(main_window)
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/resources/img/icons/ungroup.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_ungroup.setIcon(icon23)
        self.action_ungroup.setObjectName("action_ungroup")
        self.action_ungroup_all = QtWidgets.QAction(main_window)
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(":/resources/img/icons/ungroup_all.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_ungroup_all.setIcon(icon24)
        self.action_ungroup_all.setObjectName("action_ungroup_all")
        self.action_settings = QtWidgets.QAction(main_window)
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap(":/resources/img/icons/settings.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_settings.setIcon(icon25)
        self.action_settings.setObjectName("action_settings")
        self.action_exec_gensec = QtWidgets.QAction(main_window)
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap(":/resources/img/logos/gensec.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_exec_gensec.setIcon(icon26)
        self.action_exec_gensec.setObjectName("action_exec_gensec")
        self.action_undo = QtWidgets.QAction(main_window)
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap(":/resources/img/icons/undo.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_undo.setIcon(icon27)
        self.action_undo.setObjectName("action_undo")
        self.action_redo = QtWidgets.QAction(main_window)
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap(":/resources/img/icons/redo.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_redo.setIcon(icon28)
        self.action_redo.setObjectName("action_redo")
        self.action_association_colors = QtWidgets.QAction(main_window)
        icon29 = QtGui.QIcon()
        icon29.addPixmap(QtGui.QPixmap(":/resources/img/icons/colors.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_association_colors.setIcon(icon29)
        self.action_association_colors.setObjectName("action_association_colors")
        self.action_preview = QtWidgets.QAction(main_window)
        icon30 = QtGui.QIcon()
        icon30.addPixmap(QtGui.QPixmap(":/resources/img/icons/xml_preview.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_preview.setIcon(icon30)
        self.action_preview.setObjectName("action_preview")
        self.action_exec_genvis = QtWidgets.QAction(main_window)
        icon31 = QtGui.QIcon()
        icon31.addPixmap(QtGui.QPixmap(":/resources/img/logos/genvis.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_exec_genvis.setIcon(icon31)
        self.action_exec_genvis.setObjectName("action_exec_genvis")
        self.menu_file.addAction(self.action_open)
        self.menu_file.addAction(self.menu_recent_files.menuAction())
        self.menu_file.addSeparator()
        self.menu_file.addAction(self.action_save)
        self.menu_file.addAction(self.action_save_as)
        self.menu_file.addAction(self.action_save_all)
        self.menu_file.addSeparator()
        self.menu_file.addAction(self.action_print)
        self.menu_file.addSeparator()
        self.menu_file.addAction(self.action_close)
        self.menu_file.addAction(self.action_quit)
        self.menu_edit.addAction(self.action_undo)
        self.menu_edit.addAction(self.action_redo)
        self.menu_edit.addSeparator()
        self.menu_edit.addAction(self.action_group)
        self.menu_edit.addAction(self.action_ungroup)
        self.menu_edit.addAction(self.action_association_by_criteria)
        self.menu_edit.addAction(self.action_ungroup_all)
        self.menu_edit.addSeparator()
        self.menu_edit.addAction(self.action_profile)
        self.menu_options.addAction(self.action_setup)
        self.menu_options.addAction(self.action_association_colors)
        self.menu_options.addSeparator()
        self.menu_options.addAction(self.action_preview)
        self.menu_options.addSeparator()
        self.menu_options.addAction(self.action_settings)
        self.menu_help.addAction(self.action_help)
        self.menu_help.addSeparator()
        self.menu_help.addAction(self.action_about_genrep)
        self.menu_help.addAction(self.action_about)
        self.menubar.addAction(self.menu_file.menuAction())
        self.menubar.addAction(self.menu_edit.menuAction())
        self.menubar.addAction(self.menu_options.menuAction())
        self.menubar.addAction(self.menu_help.menuAction())
        self.standart_toolbar.addAction(self.action_open)
        self.standart_toolbar.addAction(self.action_save)
        self.standart_toolbar.addAction(self.action_preview)
        self.standart_toolbar.addAction(self.action_print)
        self.tools_toolbar.addAction(self.action_profile)
        self.tools_toolbar.addAction(self.action_setup)
        self.tools_toolbar.addAction(self.action_ungroup)
        self.tools_toolbar.addAction(self.action_group)
        self.applications_toolbar.addAction(self.action_exec_gensec)
        self.applications_toolbar.addAction(self.action_exec_genvis)

        self.retranslateUi(main_window)
        self.tab_widget.setCurrentIndex(-1)
        QtCore.QMetaObject.connectSlotsByName(main_window)

    def retranslateUi(self, main_window):
        _translate = QtCore.QCoreApplication.translate
        main_window.setWindowTitle(_translate("main_window", "GenRep"))
        self.animation_handler.setToolTip(_translate("main_window", "Double click to Show/Hide Plot"))
        self.animation_handler.setStatusTip(_translate("main_window", "Show/Hide Plot"))
        self.signal_low_label.setText(_translate("main_window", "low"))
        self.signal_low.setToolTip(_translate("main_window", "Low channel to signal area"))
        self.signal_low.setStatusTip(_translate("main_window", "Low channel to signal area"))
        self.signal_label.setText(_translate("main_window", "signal"))
        self.signal.setToolTip(_translate("main_window", "Count of signal area"))
        self.signal.setStatusTip(_translate("main_window", "Count of signal area"))
        self.signal_high_label.setText(_translate("main_window", "high"))
        self.signal_high.setToolTip(_translate("main_window", "High channel to signal area"))
        self.signal_high.setStatusTip(_translate("main_window", "High channel to signal area"))
        self.apply_to.setText(_translate("main_window", "Apply this to"))
        self.apply_all.setText(_translate("main_window", "Apply to all"))
        self.background_low_label.setText(_translate("main_window", "low"))
        self.background_low.setToolTip(_translate("main_window", "Low channel to background area"))
        self.background_low.setStatusTip(_translate("main_window", "Low channel to background area"))
        self.background_label.setText(_translate("main_window", "background"))
        self.background.setToolTip(_translate("main_window", "Count of background area"))
        self.background.setStatusTip(_translate("main_window", "Count of background area"))
        self.background_high_label.setText(_translate("main_window", "high"))
        self.background_high.setToolTip(_translate("main_window", "High channel to background area"))
        self.background_high.setStatusTip(_translate("main_window", "High channel to background area"))
        self.tool_button_previous.setToolTip(_translate("main_window", "Previous"))
        self.tool_button_previous.setStatusTip(_translate("main_window", "Go to the previous sample."))
        self.current_row.setToolTip(_translate("main_window", "Current sample"))
        self.current_row.setStatusTip(_translate("main_window", "Current sample"))
        self.push_button_go.setToolTip(_translate("main_window", "Go"))
        self.push_button_go.setStatusTip(_translate("main_window", "Go to the selected sample."))
        self.push_button_go.setText(_translate("main_window", "go"))
        self.tool_button_next.setToolTip(_translate("main_window", "Next"))
        self.tool_button_next.setStatusTip(_translate("main_window", "Go to the next sample."))
        self.columns_list.headerItem().setText(0, _translate("main_window", "Columns"))
        self.menu_file.setTitle(_translate("main_window", "&File"))
        self.menu_recent_files.setTitle(_translate("main_window", "&Recent Files"))
        self.menu_edit.setTitle(_translate("main_window", "&Edit"))
        self.menu_options.setTitle(_translate("main_window", "&Options"))
        self.menu_help.setTitle(_translate("main_window", "&Help"))
        self.standart_toolbar.setWindowTitle(_translate("main_window", "Standard Bar"))
        self.tools_toolbar.setWindowTitle(_translate("main_window", "Tools Bar"))
        self.applications_toolbar.setWindowTitle(_translate("main_window", "Applications Bar"))
        self.action_new.setText(_translate("main_window", "&New"))
        self.action_new.setStatusTip(_translate("main_window", "Create a new file."))
        self.action_new.setShortcut(_translate("main_window", "Ctrl+N"))
        self.action_open.setText(_translate("main_window", "&Open"))
        self.action_open.setStatusTip(_translate("main_window", "Open an existing file."))
        self.action_open.setShortcut(_translate("main_window", "Ctrl+O"))
        self.action_save.setText(_translate("main_window", "&Save"))
        self.action_save.setStatusTip(_translate("main_window", "Save the current document on disk."))
        self.action_save.setShortcut(_translate("main_window", "Ctrl+S"))
        self.action_save_as.setText(_translate("main_window", "Save &As"))
        self.action_save_as.setStatusTip(_translate("main_window", "Save the current document under a new name."))
        self.action_save_as.setShortcut(_translate("main_window", "Ctrl+Shift+S"))
        self.action_save_all.setText(_translate("main_window", "Save A&ll"))
        self.action_save_all.setStatusTip(_translate("main_window", "Save all documents on disk."))
        self.action_print.setText(_translate("main_window", "&Print"))
        self.action_print.setStatusTip(_translate("main_window", "Print the current table."))
        self.action_print.setShortcut(_translate("main_window", "Ctrl+P"))
        self.action_cut.setText(_translate("main_window", "C&ut"))
        self.action_cut.setStatusTip(_translate("main_window", "Cut the current selection content to the clipboard."))
        self.action_cut.setShortcut(_translate("main_window", "Ctrl+X"))
        self.action_copy.setText(_translate("main_window", "&Copy"))
        self.action_copy.setStatusTip(_translate("main_window", "Copy the current selection content to the clipboard."))
        self.action_copy.setShortcut(_translate("main_window", "Ctrl+C"))
        self.action_paste.setText(_translate("main_window", "&Paste"))
        self.action_paste.setStatusTip(_translate("main_window", "Paste the clipboard content into the current selection."))
        self.action_paste.setShortcut(_translate("main_window", "Ctrl+V"))
        self.action_help.setText(_translate("main_window", "&Help"))
        self.action_help.setShortcut(_translate("main_window", "F1"))
        self.action_about.setText(_translate("main_window", "About &Sequence-ToolKit"))
        self.action_delete.setText(_translate("main_window", "&Delete"))
        self.action_delete.setStatusTip(_translate("main_window", "Remove the current selection."))
        self.action_delete.setShortcut(_translate("main_window", "Del"))
        self.action_quit.setText(_translate("main_window", "&Quit"))
        self.action_quit.setStatusTip(_translate("main_window", "Close all tabs and quit the application."))
        self.action_quit.setShortcut(_translate("main_window", "Ctrl+Q"))
        self.action_close.setText(_translate("main_window", "&Close"))
        self.action_close.setStatusTip(_translate("main_window", "Close the current tab."))
        self.action_close.setShortcut(_translate("main_window", "Ctrl+W"))
        self.action_about_genrep.setText(_translate("main_window", "About &GenRep"))
        self.action_setup.setText(_translate("main_window", "Set&Up"))
        self.action_setup.setStatusTip(_translate("main_window", "Defines how are to be displayed the results."))
        self.action_setup.setShortcut(_translate("main_window", "Ctrl+T"))
        self.action_profile.setText(_translate("main_window", "Pro&file"))
        self.action_profile.setStatusTip(_translate("main_window", "Define the parameters to report."))
        self.action_association_by_criteria.setText(_translate("main_window", "&Association by Criteria"))
        self.action_association_by_criteria.setToolTip(_translate("main_window", "Association by Criteria"))
        self.action_association_by_criteria.setStatusTip(_translate("main_window", "Define the associated processes to a measurement using a criteria."))
        self.action_association_by_criteria.setShortcut(_translate("main_window", "Ctrl+A"))
        self.action_group.setText(_translate("main_window", "&Group"))
        self.action_group.setStatusTip(_translate("main_window", "Define the associated processes to a measurement."))
        self.action_group.setShortcut(_translate("main_window", "Ctrl+G"))
        self.action_ungroup.setText(_translate("main_window", "U&ngroup"))
        self.action_ungroup.setStatusTip(_translate("main_window", "Ungroup the associated processes."))
        self.action_ungroup.setShortcut(_translate("main_window", "Ctrl+Shift+G"))
        self.action_ungroup_all.setText(_translate("main_window", "Ungroup &All"))
        self.action_ungroup_all.setStatusTip(_translate("main_window", "Ungroup all the associated processes."))
        self.action_settings.setText(_translate("main_window", "&Settings"))
        self.action_exec_gensec.setText(_translate("main_window", "GenSec"))
        self.action_exec_gensec.setToolTip(_translate("main_window", "Open Sequence Generator"))
        self.action_undo.setText(_translate("main_window", "Undo"))
        self.action_undo.setShortcut(_translate("main_window", "Ctrl+Z"))
        self.action_redo.setText(_translate("main_window", "Redo"))
        self.action_redo.setShortcut(_translate("main_window", "Ctrl+Shift+Z"))
        self.action_association_colors.setText(_translate("main_window", "Association Colors"))
        self.action_preview.setText(_translate("main_window", "XML &Preview"))
        self.action_preview.setStatusTip(_translate("main_window", "Open a preview of the xml file."))
        self.action_preview.setShortcut(_translate("main_window", "Ctrl+U"))
        self.action_exec_genvis.setText(_translate("main_window", "GenVis"))
        self.action_exec_genvis.setToolTip(_translate("main_window", "Open Report Analyzer"))

from controller.genrep.plot import PlotWidget
from controller.widgets.values_spinbox import ValuesSpinBox
import img_rc
